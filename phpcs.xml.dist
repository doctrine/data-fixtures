<?xml version="1.0"?>
<ruleset>
    <arg name="basepath" value="."/>
    <arg name="extensions" value="php"/>
    <arg name="parallel" value="80"/>
    <arg name="cache" value=".phpcs-cache"/>
    <arg name="colors" />

    <config name="php_version" value="70400"/>

    <!-- Ignore warnings and show progress of the run -->
    <arg value="nps"/>

    <file>src</file>
    <file>tests</file>

    <rule ref="Doctrine">
        <!-- Traversable type hints often end up as mixed[], so we skip them for now -->
        <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification"/>
    </rule>

    <rule ref="PSR1.Classes.ClassDeclaration.MultipleClasses">
        <exclude-pattern>tests/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming">
        <exclude-pattern>src/AbstractFixture.php</exclude-pattern>
        <exclude-pattern>src/Executor/AbstractExecutor.php</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming">
        <exclude-pattern>src/Exception/CircularReferenceException.php</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming">
        <exclude-pattern>src/DependentFixtureInterface.php</exclude-pattern>
        <exclude-pattern>src/FixtureInterface.php</exclude-pattern>
        <exclude-pattern>src/Purger/ORMPurgerInterface.php</exclude-pattern>
        <exclude-pattern>src/Purger/PurgerInterface.php</exclude-pattern>
        <exclude-pattern>src/OrderedFixtureInterface.php</exclude-pattern>
        <exclude-pattern>src/SharedFixtureInterface.php</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint">
        <!-- Adding parameter types is a BC break in most cases because of strict types. -->
        <exclude-pattern>src/*</exclude-pattern>

        <!-- Don't add parameter types to overridden methods -->
        <exclude-pattern>tests/Common/DataFixtures/TestTypes/UuidType.php</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint">
        <!-- Adding property types is a BC break in most cases. -->
        <exclude-pattern>src/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint">
        <!-- Adding return types is a BC break in most cases. -->
        <exclude-pattern>src/*</exclude-pattern>
    </rule>

    <rule ref="Squiz.Classes.ClassFileName.NoMatch">
        <exclude-pattern>tests/*</exclude-pattern>
    </rule>
</ruleset>
